#!/usr/bin/env python3
"""
Render.com ‡¶è‡¶∞ ‡¶ú‡¶®‡ßç‡¶Ø ‡¶¨‡¶æ‡¶Ç‡¶≤‡¶æ ‡¶ü‡ßá‡¶≤‡¶ø‡¶ó‡ßç‡¶∞‡¶æ‡¶Æ ‡¶¨‡¶ü
"""

import os
import logging
from flask import Flask, request, jsonify
from telegram import Update, Bot
from telegram.ext import Application, CommandHandler, MessageHandler, filters, ContextTypes

# ‡¶≤‡¶ó‡¶ø‡¶Ç ‡¶∏‡ßá‡¶ü‡¶Ü‡¶™
logging.basicConfig(
    format='%(asctime)s - %(name)s - %(levelname)s - %(message)s',
    level=logging.INFO
)
logger = logging.getLogger(__name__)

# ‡¶ï‡¶®‡¶´‡¶ø‡¶ó‡¶æ‡¶∞‡ßá‡¶∂‡¶®
BOT_TOKEN = os.getenv('BOT_TOKEN')
WEBHOOK_URL = os.getenv('WEBHOOK_URL')
PORT = int(os.getenv('PORT', 10000))  # Render.com ‡¶°‡¶ø‡¶´‡¶≤‡ßç‡¶ü ‡¶™‡ßã‡¶∞‡ßç‡¶ü

# ‡¶´‡ßç‡¶≤‡¶æ‡¶∏‡ßç‡¶ï ‡¶Ö‡ßç‡¶Ø‡¶æ‡¶™
app = Flask(__name__)

# ‡¶¨‡¶ü ‡¶Ö‡ßç‡¶Ø‡¶æ‡¶™‡ßç‡¶≤‡¶ø‡¶ï‡ßá‡¶∂‡¶®
application = None

# ‡¶¨‡ßá‡¶∏‡¶ø‡¶ï ‡¶ï‡¶Æ‡¶æ‡¶®‡ßç‡¶° ‡¶π‡ßç‡¶Ø‡¶æ‡¶®‡ßç‡¶°‡¶≤‡¶æ‡¶∞
async def start(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    """/start ‡¶ï‡¶Æ‡¶æ‡¶®‡ßç‡¶° ‡¶π‡ßç‡¶Ø‡¶æ‡¶®‡ßç‡¶°‡¶≤‡¶æ‡¶∞"""
    user = update.effective_user
    welcome_message = f"""
üéâ ‡¶∏‡ßç‡¶¨‡¶æ‡¶ó‡¶§‡¶Æ {user.first_name}! 

‡¶è‡¶ü‡¶ø Render.com ‡¶è ‡¶°‡¶ø‡¶™‡ßç‡¶≤‡¶Ø‡¶º ‡¶ï‡¶∞‡¶æ ‡¶è‡¶ï‡¶ü‡¶ø ‡¶¨‡¶æ‡¶Ç‡¶≤‡¶æ ‡¶ü‡ßá‡¶≤‡¶ø‡¶ó‡ßç‡¶∞‡¶æ‡¶Æ ‡¶¨‡¶ü!

**‡¶¨‡ßà‡¶∂‡¶ø‡¶∑‡ßç‡¶ü‡ßç‡¶Ø:**
‚Ä¢ ‚ö° Render.com ‡¶è ‡¶°‡¶ø‡¶™‡ßç‡¶≤‡¶Ø‡¶º‡¶°
‚Ä¢ üîÑ ‡¶∏‡ßç‡¶¨‡¶Ø‡¶º‡¶Ç‡¶ï‡ßç‡¶∞‡¶ø‡¶Ø‡¶º ‡¶∞‡¶ø‡¶∏‡ßç‡¶ü‡¶æ‡¶∞‡ßç‡¶ü
‚Ä¢ üìä ‡ß®‡ß™/‡ß≠ ‡¶Ö‡¶®‡¶≤‡¶æ‡¶á‡¶®
‚Ä¢ üîí ‡¶´‡ßç‡¶∞‡¶ø SSL ‡¶∏‡¶æ‡¶∞‡ßç‡¶ü‡¶ø‡¶´‡¶ø‡¶ï‡ßá‡¶ü

**‡¶ï‡¶Æ‡¶æ‡¶®‡ßç‡¶°:**
/start - ‡¶∂‡ßÅ‡¶∞‡ßÅ ‡¶ï‡¶∞‡ßÅ‡¶®
/help - ‡¶∏‡¶æ‡¶π‡¶æ‡¶Ø‡ßç‡¶Ø ‡¶™‡¶æ‡¶®
/status - ‡¶∏‡ßç‡¶ü‡ßç‡¶Ø‡¶æ‡¶ü‡¶æ‡¶∏ ‡¶ö‡ßá‡¶ï ‡¶ï‡¶∞‡ßÅ‡¶®
/info - ‡¶¨‡¶ü ‡¶á‡¶®‡¶´‡ßã

**‡¶¨‡¶æ‡¶Ç‡¶≤‡¶æ ‡¶ï‡ßÄ‡¶ì‡¶Ø‡¶º‡¶æ‡¶∞‡ßç‡¶°:**
‡¶π‡ßç‡¶Ø‡¶æ‡¶≤‡ßã, ‡¶ï‡ßá‡¶Æ‡¶® ‡¶Ü‡¶õ‡ßá‡¶®, ‡¶ß‡¶®‡ßç‡¶Ø‡¶¨‡¶æ‡¶¶, ‡¶¨‡¶æ‡¶á
    """
    
    await update.message.reply_text(welcome_message)

async def help_command(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    """/help ‡¶ï‡¶Æ‡¶æ‡¶®‡ßç‡¶° ‡¶π‡ßç‡¶Ø‡¶æ‡¶®‡ßç‡¶°‡¶≤‡¶æ‡¶∞"""
    help_text = """
üÜò **‡¶∏‡¶æ‡¶π‡¶æ‡¶Ø‡ßç‡¶Ø ‡¶Æ‡ßá‡¶®‡ßÅ**

**‡¶¨‡ßá‡¶∏‡¶ø‡¶ï ‡¶ï‡¶Æ‡¶æ‡¶®‡ßç‡¶°:**
‚Ä¢ /start - ‡¶¨‡¶ü ‡¶∂‡ßÅ‡¶∞‡ßÅ ‡¶ï‡¶∞‡ßÅ‡¶®
‚Ä¢ /help - ‡¶è‡¶á ‡¶Æ‡ßá‡¶®‡ßÅ ‡¶¶‡ßá‡¶ñ‡¶æ‡¶®
‚Ä¢ /status - ‡¶¨‡¶ü ‡¶∏‡ßç‡¶ü‡ßç‡¶Ø‡¶æ‡¶ü‡¶æ‡¶∏ ‡¶ö‡ßá‡¶ï ‡¶ï‡¶∞‡ßÅ‡¶®
‚Ä¢ /info - ‡¶¨‡¶ü ‡¶∏‡¶Æ‡ßç‡¶™‡¶∞‡ßç‡¶ï‡ßá ‡¶§‡¶•‡ßç‡¶Ø

**‡¶¨‡¶æ‡¶Ç‡¶≤‡¶æ ‡¶ï‡¶•‡ßã‡¶™‡¶ï‡¶•‡¶®:**
‚Ä¢ "‡¶π‡ßç‡¶Ø‡¶æ‡¶≤‡ßã" - ‡¶∏‡ßç‡¶¨‡¶æ‡¶ó‡¶§‡¶Æ ‡¶¨‡¶æ‡¶∞‡ßç‡¶§‡¶æ
‚Ä¢ "‡¶ï‡ßá‡¶Æ‡¶® ‡¶Ü‡¶õ‡ßá‡¶®" - ‡¶Ü‡¶™‡¶®‡¶æ‡¶∞ ‡¶ñ‡¶¨‡¶∞ ‡¶ú‡¶æ‡¶®‡¶§‡ßá ‡¶ö‡¶æ‡¶ì‡¶Ø‡¶º‡¶æ
‚Ä¢ "‡¶ß‡¶®‡ßç‡¶Ø‡¶¨‡¶æ‡¶¶" - ‡¶ß‡¶®‡ßç‡¶Ø‡¶¨‡¶æ‡¶¶ ‡¶¨‡¶æ‡¶∞‡ßç‡¶§‡¶æ
‚Ä¢ "‡¶¨‡¶æ‡¶á" - ‡¶¨‡¶ø‡¶¶‡¶æ‡¶Ø‡¶º ‡¶¨‡¶æ‡¶∞‡ßç‡¶§‡¶æ

**‡¶Æ‡¶æ‡¶≤‡ßç‡¶ü‡¶ø‡¶Æ‡¶ø‡¶°‡¶ø‡¶Ø‡¶º‡¶æ:**
‚Ä¢ ‡¶´‡¶ü‡ßã ‡¶™‡¶æ‡¶†‡¶æ‡¶≤‡ßá ‡¶ß‡¶®‡ßç‡¶Ø‡¶¨‡¶æ‡¶¶ ‡¶¨‡¶æ‡¶∞‡ßç‡¶§‡¶æ
‚Ä¢ ‡¶°‡¶ï‡ßÅ‡¶Æ‡ßá‡¶®‡ßç‡¶ü ‡¶™‡¶æ‡¶†‡¶æ‡¶≤‡ßá ‡¶ï‡¶®‡¶´‡¶æ‡¶∞‡ßç‡¶Æ‡ßá‡¶∂‡¶®
‚Ä¢ ‡¶≠‡¶Ø‡¶º‡ßá‡¶∏ ‡¶Æ‡ßá‡¶∏‡ßá‡¶ú‡ßá‡¶∞ ‡¶â‡¶§‡ßç‡¶§‡¶∞

**‡¶Ø‡ßã‡¶ó‡¶æ‡¶Ø‡ßã‡¶ó:**
‡¶™‡ßç‡¶∞‡¶∂‡ßç‡¶® ‡¶•‡¶æ‡¶ï‡¶≤‡ßá @your_username ‡¶è ‡¶Æ‡ßá‡¶∏‡ßá‡¶ú ‡¶ï‡¶∞‡ßÅ‡¶®
    """
    
    await update.message.reply_text(help_text)

async def status_command(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    """/status ‡¶ï‡¶Æ‡¶æ‡¶®‡ßç‡¶° ‡¶π‡ßç‡¶Ø‡¶æ‡¶®‡ßç‡¶°‡¶≤‡¶æ‡¶∞"""
    status_text = """
üìä **‡¶¨‡¶ü ‡¶∏‡ßç‡¶ü‡ßç‡¶Ø‡¶æ‡¶ü‡¶æ‡¶∏**

‚úÖ ‡¶¨‡¶ü ‡¶∏‡¶ö‡¶≤ ‡¶Ü‡¶õ‡ßá
üåê Render.com ‡¶è ‡¶°‡¶ø‡¶™‡ßç‡¶≤‡¶Ø‡¶º‡¶°
üîí SSL ‡¶∏‡¶æ‡¶∞‡ßç‡¶ü‡¶ø‡¶´‡¶ø‡¶ï‡ßá‡¶ü ‡¶∏‡¶ï‡ßç‡¶∞‡¶ø‡¶Ø‡¶º
‚ö° ‡ß®‡ß™/‡ß≠ ‡¶Ö‡¶®‡¶≤‡¶æ‡¶á‡¶®

**‡¶∏‡¶æ‡¶∞‡ßç‡¶≠‡¶æ‡¶∞ ‡¶á‡¶®‡¶´‡ßã:**
‚Ä¢ ‡¶™‡ßç‡¶≤‡ßç‡¶Ø‡¶æ‡¶ü‡¶´‡¶∞‡ßç‡¶Æ: Render.com
‚Ä¢ ‡¶∞‡¶ø‡¶ú‡¶ø‡¶ì‡¶®: Singapore (‡¶¨‡¶æ‡¶Ç‡¶≤‡¶æ‡¶¶‡ßá‡¶∂‡ßá‡¶∞ ‡¶ï‡¶æ‡¶õ‡¶æ‡¶ï‡¶æ‡¶õ‡¶ø)
‚Ä¢ ‡¶™‡ßã‡¶∞‡ßç‡¶ü: 10000
    """
    
    await update.message.reply_text(status_text)

async def info_command(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    """/info ‡¶ï‡¶Æ‡¶æ‡¶®‡ßç‡¶° ‡¶π‡ßç‡¶Ø‡¶æ‡¶®‡ßç‡¶°‡¶≤‡¶æ‡¶∞"""
    info_text = """
‚ÑπÔ∏è **‡¶¨‡¶ü ‡¶á‡¶®‡¶´‡ßã**

**‡¶®‡¶æ‡¶Æ:** ‡¶¨‡¶æ‡¶Ç‡¶≤‡¶æ ‡¶ü‡ßá‡¶≤‡¶ø‡¶ó‡ßç‡¶∞‡¶æ‡¶Æ ‡¶¨‡¶ü
**‡¶≠‡¶æ‡¶∞‡ßç‡¶∏‡¶®:** 2.0.0
**‡¶™‡ßç‡¶≤‡ßç‡¶Ø‡¶æ‡¶ü‡¶´‡¶∞‡ßç‡¶Æ:** Render.com
**‡¶≠‡¶æ‡¶∑‡¶æ:** ‡¶¨‡¶æ‡¶Ç‡¶≤‡¶æ (‡¶™‡ßÇ‡¶∞‡ßç‡¶£ ‡¶∏‡¶Æ‡¶∞‡ßç‡¶•‡¶®)

**‡¶¨‡ßà‡¶∂‡¶ø‡¶∑‡ßç‡¶ü‡ßç‡¶Ø:**
‚Ä¢ ‡¶∏‡¶Æ‡ßç‡¶™‡ßÇ‡¶∞‡ßç‡¶£ ‡¶¨‡¶æ‡¶Ç‡¶≤‡¶æ ‡¶á‡¶®‡ßç‡¶ü‡¶æ‡¶∞‡¶´‡ßá‡¶∏
‚Ä¢ ‡¶∞‡¶ø‡¶Ø‡¶º‡ßá‡¶≤-‡¶ü‡¶æ‡¶á‡¶Æ ‡¶Æ‡ßá‡¶∏‡ßá‡¶ú ‡¶π‡ßç‡¶Ø‡¶æ‡¶®‡ßç‡¶°‡¶≤‡¶ø‡¶Ç
‚Ä¢ ‡¶Æ‡¶æ‡¶≤‡ßç‡¶ü‡¶ø‡¶Æ‡¶ø‡¶°‡¶ø‡¶Ø‡¶º‡¶æ ‡¶∏‡¶æ‡¶™‡ßã‡¶∞‡ßç‡¶ü
‚Ä¢ ‡¶ì‡¶Ø‡¶º‡ßá‡¶¨‡¶π‡ßÅ‡¶ï-‡¶≠‡¶ø‡¶§‡ßç‡¶§‡¶ø‡¶ï ‡¶Ü‡¶∞‡ßç‡¶ï‡¶ø‡¶ü‡ßá‡¶ï‡¶ö‡¶æ‡¶∞

**‡¶°‡ßá‡¶≠‡ßá‡¶≤‡¶™‡¶æ‡¶∞:** Suna.so AI Assistant
    """
    
    await update.message.reply_text(info_text)

async def handle_message(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    """‡¶ü‡ßá‡¶ï‡ßç‡¶∏‡¶ü ‡¶Æ‡ßá‡¶∏‡ßá‡¶ú ‡¶π‡ßç‡¶Ø‡¶æ‡¶®‡ßç‡¶°‡¶≤‡¶æ‡¶∞"""
    text = update.message.text.lower()
    
    # ‡¶¨‡¶æ‡¶Ç‡¶≤‡¶æ ‡¶ï‡ßÄ‡¶ì‡¶Ø‡¶º‡¶æ‡¶∞‡ßç‡¶° ‡¶∞‡ßá‡¶∏‡¶™‡¶®‡ßç‡¶∏
    responses = {
        '‡¶π‡ßç‡¶Ø‡¶æ‡¶≤‡ßã': f'‡¶π‡ßç‡¶Ø‡¶æ‡¶≤‡ßã {update.effective_user.first_name}! üòä',
        '‡¶π‡¶æ‡¶á': f'‡¶π‡¶æ‡¶á {update.effective_user.first_name}! üëã',
        '‡¶ï‡ßá‡¶Æ‡¶® ‡¶Ü‡¶õ‡ßá‡¶®': '‡¶Ü‡¶Æ‡¶ø ‡¶≠‡¶æ‡¶≤‡ßã ‡¶Ü‡¶õ‡¶ø, ‡¶Ü‡¶™‡¶®‡¶ø ‡¶ï‡ßá‡¶Æ‡¶® ‡¶Ü‡¶õ‡ßá‡¶®? üòä',
        '‡¶ß‡¶®‡ßç‡¶Ø‡¶¨‡¶æ‡¶¶': '‡¶Ü‡¶™‡¶®‡¶æ‡¶ï‡ßá‡¶ì ‡¶ß‡¶®‡ßç‡¶Ø‡¶¨‡¶æ‡¶¶! üôè',
        '‡¶¨‡¶æ‡¶á': '‡¶¨‡¶æ‡¶á ‡¶¨‡¶æ‡¶á! ‡¶Ü‡¶¨‡¶æ‡¶∞ ‡¶¶‡ßá‡¶ñ‡¶æ ‡¶π‡¶¨‡ßá! üëã',
        '‡¶Ü‡¶≤‡¶π‡¶æ‡¶Æ‡¶¶‡ßÅ‡¶≤‡¶ø‡¶≤‡ßç‡¶≤‡¶æ‡¶π': '‡¶Ü‡¶≤‡¶π‡¶æ‡¶Æ‡¶¶‡ßÅ‡¶≤‡¶ø‡¶≤‡ßç‡¶≤‡¶æ‡¶π! ‡¶∏‡¶¨‡¶ï‡¶ø‡¶õ‡ßÅ ‡¶≠‡¶æ‡¶≤‡ßã ‡¶Ü‡¶õ‡ßá üåü',
        '‡¶ï‡¶ø ‡¶ñ‡¶¨‡¶∞': '‡¶∏‡¶¨ ‡¶†‡¶ø‡¶ï ‡¶Ü‡¶õ‡ßá! ‡¶Ü‡¶™‡¶®‡¶æ‡¶∞ ‡¶ï‡¶ø ‡¶ñ‡¶¨‡¶∞? üì∞'
    }
    
    response = responses.get(text, None)
    if response:
        await update.message.reply_text(response)
    else:
        await update.message.reply_text(
            f"‡¶Ü‡¶™‡¶®‡¶ø ‡¶¨‡¶≤‡ßá‡¶õ‡ßá‡¶®: {text}\n\n"
            f"‡¶Ü‡¶Æ‡¶ø ‡¶è‡¶ñ‡¶®‡¶ì ‡¶∂‡¶ø‡¶ñ‡¶õ‡¶ø! /help ‡¶ï‡¶Æ‡¶æ‡¶®‡ßç‡¶° ‡¶¶‡¶ø‡¶Ø‡¶º‡ßá ‡¶∏‡¶æ‡¶π‡¶æ‡¶Ø‡ßç‡¶Ø ‡¶™‡¶æ‡¶®‡•§"
        )

async def handle_photo(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    """‡¶´‡¶ü‡ßã ‡¶Æ‡ßá‡¶∏‡ßá‡¶ú ‡¶π‡ßç‡¶Ø‡¶æ‡¶®‡ßç‡¶°‡¶≤‡¶æ‡¶∞"""
    await update.message.reply_text(
        "üì∏ ‡¶¶‡¶æ‡¶∞‡ßÅ‡¶® ‡¶õ‡¶¨‡¶ø! ‡¶Ü‡¶™‡¶®‡¶æ‡¶ï‡ßá ‡¶ß‡¶®‡ßç‡¶Ø‡¶¨‡¶æ‡¶¶ ‡¶õ‡¶¨‡¶ø ‡¶™‡¶æ‡¶†‡¶æ‡¶®‡ßã‡¶∞ ‡¶ú‡¶®‡ßç‡¶Ø‡•§"
    )

async def handle_document(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    """‡¶°‡¶ï‡ßÅ‡¶Æ‡ßá‡¶®‡ßç‡¶ü ‡¶Æ‡ßá‡¶∏‡ßá‡¶ú ‡¶π‡ßç‡¶Ø‡¶æ‡¶®‡ßç‡¶°‡¶≤‡¶æ‡¶∞"""
    await update.message.reply_text(
        "üìÑ ‡¶°‡¶ï‡ßÅ‡¶Æ‡ßá‡¶®‡ßç‡¶ü ‡¶∞‡¶ø‡¶∏‡¶ø‡¶≠ ‡¶π‡¶Ø‡¶º‡ßá‡¶õ‡ßá! ‡¶ß‡¶®‡ßç‡¶Ø‡¶¨‡¶æ‡¶¶‡•§"
    )

async def handle_voice(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    """‡¶≠‡¶Ø‡¶º‡ßá‡¶∏ ‡¶Æ‡ßá‡¶∏‡ßá‡¶ú ‡¶π‡ßç‡¶Ø‡¶æ‡¶®‡ßç‡¶°‡¶≤‡¶æ‡¶∞"""
    await update.message.reply_text(
        "üé§ ‡¶≠‡¶Ø‡¶º‡ßá‡¶∏ ‡¶Æ‡ßá‡¶∏‡ßá‡¶ú ‡¶∂‡ßÅ‡¶®‡ßá‡¶õ‡¶ø! ‡¶ß‡¶®‡ßç‡¶Ø‡¶¨‡¶æ‡¶¶‡•§"
    )

# ‡¶´‡ßç‡¶≤‡¶æ‡¶∏‡ßç‡¶ï ‡¶∞‡ßÅ‡¶ü
@app.route('/')
def index():
    """‡¶π‡ßã‡¶Æ‡¶™‡ßá‡¶ú"""
    return jsonify({
        'status': 'running',
        'bot': 'Bangla Telegram Bot',
        'platform': 'Render.com',
        'language': 'Bengali'
    })

@app.route('/health')
def health():
    """‡¶π‡ßá‡¶≤‡¶• ‡¶ö‡ßá‡¶ï ‡¶è‡¶®‡ßç‡¶°‡¶™‡¶Ø‡¶º‡ßá‡¶®‡ßç‡¶ü"""
    return jsonify({'status': 'healthy'}), 200

@app.route('/webhook', methods=['POST'])
def webhook():
    """‡¶ü‡ßá‡¶≤‡¶ø‡¶ó‡ßç‡¶∞‡¶æ‡¶Æ ‡¶ì‡¶Ø‡¶º‡ßá‡¶¨‡¶π‡ßÅ‡¶ï ‡¶è‡¶®‡ßç‡¶°‡¶™‡¶Ø‡¶º‡ßá‡¶®‡ßç‡¶ü"""
    try:
        # JSON ‡¶°‡ßá‡¶ü‡¶æ ‡¶™‡¶æ‡¶∞‡ßç‡¶∏ ‡¶ï‡¶∞‡¶æ
        json_data = request.get_json()
        
        # Update ‡¶Ö‡¶¨‡¶ú‡ßá‡¶ï‡ßç‡¶ü ‡¶§‡ßà‡¶∞‡¶ø ‡¶ï‡¶∞‡¶æ
        update = Update.de_json(json_data, Bot(BOT_TOKEN))
        
        # ‡¶Ö‡ßç‡¶Ø‡¶æ‡¶™‡ßç‡¶≤‡¶ø‡¶ï‡ßá‡¶∂‡¶® ‡¶™‡ßç‡¶∞‡¶∏‡ßá‡¶∏ ‡¶ï‡¶∞‡¶æ
        asyncio.run(application.process_update(update))
        
        return jsonify({'status': 'ok'}), 200
        
    except Exception as e:
        logger.error(f"Webhook error: {e}")
        return jsonify({'error': str(e)}), 500

# ‡¶π‡ßç‡¶Ø‡¶æ‡¶®‡ßç‡¶°‡¶≤‡¶æ‡¶∞ ‡¶∏‡ßá‡¶ü‡¶Ü‡¶™
def setup_handlers(app):
    """‡¶ü‡ßá‡¶≤‡¶ø‡¶ó‡ßç‡¶∞‡¶æ‡¶Æ ‡¶π‡ßç‡¶Ø‡¶æ‡¶®‡ßç‡¶°‡¶≤‡¶æ‡¶∞ ‡¶∏‡ßá‡¶ü‡¶Ü‡¶™"""
    # ‡¶ï‡¶Æ‡¶æ‡¶®‡ßç‡¶° ‡¶π‡ßç‡¶Ø‡¶æ‡¶®‡ßç‡¶°‡¶≤‡¶æ‡¶∞
    app.add_handler(CommandHandler("start", start))
    app.add_handler(CommandHandler("help", help_command))
    app.add_handler(CommandHandler("status", status_command))
    app.add_handler(CommandHandler("info", info_command))
    
    # ‡¶Æ‡ßá‡¶∏‡ßá‡¶ú ‡¶π‡ßç‡¶Ø‡¶æ‡¶®‡ßç‡¶°‡¶≤‡¶æ‡¶∞
    app.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, handle_message))
    app.add_handler(MessageHandler(filters.PHOTO, handle_photo))
    app.add_handler(MessageHandler(filters.Document.ALL, handle_document))
    app.add_handler(MessageHandler(filters.VOICE, handle_voice))

# ‡¶Ö‡ßç‡¶Ø‡¶æ‡¶™‡ßç‡¶≤‡¶ø‡¶ï‡ßá‡¶∂‡¶® ‡¶á‡¶®‡¶ø‡¶∂‡¶ø‡¶Ø‡¶º‡¶æ‡¶≤‡¶æ‡¶á‡¶ú‡ßá‡¶∂‡¶®
def init_app():
    """‡¶Ö‡ßç‡¶Ø‡¶æ‡¶™‡ßç‡¶≤‡¶ø‡¶ï‡ßá‡¶∂‡¶® ‡¶á‡¶®‡¶ø‡¶∂‡¶ø‡¶Ø‡¶º‡¶æ‡¶≤‡¶æ‡¶á‡¶ú ‡¶ï‡¶∞‡¶æ"""
    global application
    
    # ‡¶ü‡ßá‡¶≤‡¶ø‡¶ó‡ßç‡¶∞‡¶æ‡¶Æ ‡¶Ö‡ßç‡¶Ø‡¶æ‡¶™‡ßç‡¶≤‡¶ø‡¶ï‡ßá‡¶∂‡¶® ‡¶§‡ßà‡¶∞‡¶ø
    application = Application.builder().token(BOT_TOKEN).build()
    
    # ‡¶π‡ßç‡¶Ø‡¶æ‡¶®‡ßç‡¶°‡¶≤‡¶æ‡¶∞ ‡¶∏‡ßá‡¶ü‡¶Ü‡¶™
    setup_handlers(application)
    
    return application

if __name__ == '__main__':
    # ‡¶ö‡ßá‡¶ï ‡¶ï‡¶∞‡ßÅ‡¶® ‡¶∏‡¶¨ ‡¶è‡¶®‡¶≠‡¶æ‡¶Ø‡¶º‡¶∞‡¶®‡¶Æ‡ßá‡¶®‡ßç‡¶ü ‡¶≠‡ßá‡¶∞‡¶ø‡¶Ø‡¶º‡ßá‡¶¨‡¶≤ ‡¶Ü‡¶õ‡ßá ‡¶ï‡¶ø‡¶®‡¶æ
    if not BOT_TOKEN:
        logger.error("BOT_TOKEN ‡¶è‡¶®‡¶≠‡¶æ‡¶Ø‡¶º‡¶∞‡¶®‡¶Æ‡ßá‡¶®‡ßç‡¶ü ‡¶≠‡ßá‡¶∞‡¶ø‡¶Ø‡¶º‡ßá‡¶¨‡¶≤ ‡¶∏‡ßá‡¶ü ‡¶ï‡¶∞‡¶æ ‡¶π‡¶Ø‡¶º‡¶®‡¶ø!")
        sys.exit(1)
    
    if not WEBHOOK_URL:
        logger.error("WEBHOOK_URL ‡¶è‡¶®‡¶≠‡¶æ‡¶Ø‡¶º‡¶∞‡¶®‡¶Æ‡ßá‡¶®‡ßç‡¶ü ‡¶≠‡ßá‡¶∞‡¶ø‡¶Ø‡¶º‡ßá‡¶¨‡¶≤ ‡¶∏‡ßá‡¶ü ‡¶ï‡¶∞‡¶æ ‡¶π‡¶Ø‡¶º‡¶®‡¶ø!")
        sys.exit(1)
    
    # ‡¶Ö‡ßç‡¶Ø‡¶æ‡¶™‡ßç‡¶≤‡¶ø‡¶ï‡ßá‡¶∂‡¶® ‡¶á‡¶®‡¶ø‡¶∂‡¶ø‡¶Ø‡¶º‡¶æ‡¶≤‡¶æ‡¶á‡¶ú ‡¶ï‡¶∞‡¶æ
    init_app()
    
    # ‡¶´‡ßç‡¶≤‡¶æ‡¶∏‡ßç‡¶ï ‡¶∏‡¶æ‡¶∞‡ßç‡¶≠‡¶æ‡¶∞ ‡¶ö‡¶æ‡¶≤‡ßÅ ‡¶ï‡¶∞‡¶æ
    logger.info(f"Starting server on port {PORT}")
    app.run(host='0.0.0.0', port=PORT)